/**
 * sortable 1.0
 *
 * Makes html tables sortable, ie9+ (update note: nope. 2019+ browsers, ish)
 *
 * Styling is done in css.
 *
 * Original Copyleft 2017 Jonas Earendel
 * New version mostly resembles Jonas' work.
 */

document.addEventListener('click', (e) => {
	const table_class_name = 'sortable'
	const class_up         = 'dir-u'
	const class_dn         = 'dir-d'
	const element          = e.target

	function getValue(element) {
		// If you aren't using data-sort and want to make it just the tiniest bit smaller/faster
		// comment this line and uncomment the next one
		return element.getAttribute('data-sort') || element.innerText
		// return element.innerText
	}
  
	if (element.nodeName === 'TH') {
		try {
			const table = element.closest('table')
			const tr    = element.parentNode

			if ( table.classList.contains(table_class_name) ) {
				let column_index, newDirection
				const nodes = tr.cells
  
				// Get column index, reset classes on everything else
				Array.from(nodes).forEach((item, idx) => {
					if ( element === item ) {
						column_index = idx
						newDirection = element.classList.contains(class_dn) ? class_up : class_dn
					}
					item.classList.remove(class_dn, class_up)
				})

				element.classList.add(newDirection)

				// extract all table rows, so the sorting can start.
				const org_tbody = table.tBodies[0]

				// get the array rows in an array, so we can sort them...
				const rows = Array.from(org_tbody.rows)
  
				const reverse = newDirection === class_up
  
				// sort them using custom built in array sort.
				rows.sort((a, b) => {
					const x = getValue((reverse ? a : b).cells[column_index])
					const y = getValue((reverse ? b : a).cells[column_index])
			
					return isNaN(x - y) ? x.localeCompare(y) : x - y
				})
  
				// Make a clone without content
				const clone_tbody = org_tbody.cloneNode()
  
				// Build a sorted table body and replace the old one.
				while (rows.length) {
					clone_tbody.appendChild(rows.splice(0, 1)[0])
				}
  
				// And finally insert the end result
				table.replaceChild(clone_tbody, org_tbody)
			}
		} catch (error) {
			// Do Nothing.
		}
	}
})